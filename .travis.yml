language: shell

addons:
  homebrew:
    packages:
    update: false

stages:
  - name: "No dependencies" # Doesn't depend on anything apart from upstream packages
    if: type != cron
  - name: "Has first level dependencies" # Depends on a package in the "no dependencies" group
    if: type != cron
  - name: "Main label upload" # Puts Anaconda packages to the main label
    if: type = push AND branch = master
  - name: "Cleanup" # Job for removing old Anaconda labels
    if: type = cron

jobs:
 include:
 # EDA Tools - Misc
  # Linux
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=misc/magic

 # EDA Tools - Bitstream Tools
  # Linux
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=bit/icestorm
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=bit/prjtrellis
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=bit/prjxray-db
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=bit/prjxray-tools
  # Windows
  - stage: "No dependencies"
    os: windows
    env:
    - PACKAGE=bit/icestorm
  - stage: "No dependencies"
    os: windows
    env:
    - PACKAGE=bit/prjtrellis
  # OSX
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=bit/icestorm
  - stage: "No dependencies"
    os: osx
    env:
    - PACKAGE=bit/prjtrellis

 # EDA Tools - Simulation
  # Linux
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=sim/icarus
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=sim/verilator
  # Windows
  - stage: "No dependencies"
    os: windows
    env:
    - PACKAGE=sim/icarus
  # OSX
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=sim/icarus
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=sim/verilator

 # EDA Tools - Synthesis
  # Linux
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=syn/yosys
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=syn/quicklogic-yosys
  - stage: "Has first level dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=syn/symbiflow-yosys LIBFFI_VERSION=3.2.1
  - stage: "Has first level dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=syn/symbiflow-yosys LIBFFI_VERSION=3.3
  # Windows
  - stage: "No dependencies"
    os: windows
    env:
    - PACKAGE=syn/yosys
  - stage: "No dependencies"
    os: windows
    env:
    - PACKAGE=syn/quicklogic-yosys
  # OSX
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=syn/yosys EXTRA_BUILD_ARGS="--no-test"
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=syn/quicklogic-yosys EXTRA_BUILD_ARGS="--no-test"
  - stage: "Has first level dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=syn/symbiflow-yosys LIBFFI_VERSION=3.2.1
  - stage: "Has first level dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=syn/symbiflow-yosys LIBFFI_VERSION=3.3

 # EDA Tools - Place and Route
  # Linux
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/vtr
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/vtr-gui
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/symbiflow-vtr
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/symbiflow-vtr-gui
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/quicklogic-vtr
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/quicklogic-vtr-gui
  - stage: "Has first level dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/arachne
  - stage: "Has first level dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/nextpnr/ice40
  - stage: "Has first level dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/nextpnr/ecp5
  - stage: "Has first level dependencies"
    os: linux
    dist: xenial
    env:
    - PACKAGE=pnr/nextpnr/generic
  # Windows
  - stage: "Has first level dependencies"
    os: windows
    env:
    - PACKAGE=pnr/nextpnr/ice40
  - stage: "Has first level dependencies"
    os: windows
    env:
    - PACKAGE=pnr/nextpnr/generic
  # OSX
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=pnr/vtr
  - stage: "No dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=pnr/vtr-gui
  - stage: "Has first level dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=pnr/nextpnr/ice40
  - stage: "Has first level dependencies"
    os: osx
    osx_image: xcode8.3
    env:
    - PACKAGE=pnr/nextpnr/generic

 # EDA Tools - Formal
  - stage: "Has first level dependencies"
    env:
    - PACKAGE=formal/symbiyosys

 # EDA Tools - Xilinx Vivado metapackages
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
      - PACKAGE=xilinx/vivado
      - VERSIONS=$TRAVIS_BUILD_DIR/xilinx/vivado/versions
    script:
      - bash $TRAVIS_BUILD_DIR/xilinx/vivado/gen_metapackages.sh
    after_success:
      - echo "Xilinx Vivado metapackages built for versions:" && cat $VERSIONS

 # Move packages from the current label to main
  - stage: "Main label upload"
    os: linux
    dist: xenial
    script:
      - bash $TRAVIS_BUILD_DIR/.travis/master-package.sh

 # Remove old labels
  - stage: "Cleanup"
    os: linux
    dist: xenial
    script:
      - bash $TRAVIS_BUILD_DIR/.travis/cleanup-anaconda.sh

 allow_failures:
  - stage: "Has first level dependencies"
    os: windows
    env:
    - PACKAGE=pnr/nextpnr/ice40
  - stage: "No dependencies"
    os: osx
    env:
    - PACKAGE=pnr/vtr-gui
  - stage: "No dependencies"
    os: osx
    env:
    - PACKAGE=pnr/vtr
  - stage: "No dependencies"
    os: windows
    env:
    - PACKAGE=sim/icarus
  - stage: "No dependencies"
    os: linux
    dist: xenial
    env:
      - PACKAGE=xilinx/vivado
      - VERSIONS=$TRAVIS_BUILD_DIR/xilinx/vivado/versions
    script:
      - bash $TRAVIS_BUILD_DIR/xilinx/vivado/gen_metapackages.sh
    after_success:
      - echo "Xilinx Vivado metapackages built for versions:" && cat $VERSIONS

before_install:
 - source $TRAVIS_BUILD_DIR/.travis/common.sh
 - bash $TRAVIS_BUILD_DIR/.travis/fixup-git.sh
 - bash $TRAVIS_BUILD_DIR/.travis/download_sdk.sh
 - source $TRAVIS_BUILD_DIR/.travis/common.sh

install:
 - bash $TRAVIS_BUILD_DIR/.travis/install.sh

script:
 - bash $TRAVIS_BUILD_DIR/.travis/script.sh

after_failure:
 - bash $TRAVIS_BUILD_DIR/.travis/after_failure.sh

after_success:
 - bash $TRAVIS_BUILD_DIR/.travis/after_success.sh

cache:
  directories:
   - $HOME/.conda/pkgs
