name: Build packages

on:
  workflow_call:
    secrets:
      ANACONDA_TOKEN:
        description: 'Anaconda Token'
      ANACONDA_USER:
        description: 'Anaconda User'

env:
  ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
  ANACONDA_USER: ${{ secrets.ANACONDA_USER }}
  DEBIAN_FRONTEND: noninteractive
  GHA_MACHINE_TYPE: "n2-standard-4"
  APT_REQUIREMENTS: binutils build-essential csh curl git libgl1 pkg-config sudo wget

defaults:
  run:
    shell: bash

jobs:
  magic-linux:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    env:
      PACKAGE: "misc/magic"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }} libxrender1
      - uses: ./ci

  netgen-linux:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    env:
      PACKAGE: "misc/netgen"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }}
      - uses: ./ci

  yosys-linux-py310:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    env:
      PACKAGE: "syn/yosys"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.10"
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }}
      - uses: ./ci


  open_pdks-sky130a-linux:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    needs: ["magic-linux"]
    env:
      PACKAGE: "misc/open_pdks/sky130a"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }} libxrender1
      - uses: ./ci

  openroad-linux-py310:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    env:
      PACKAGE: "pnr/openroad"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.10"
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }}
      - uses: ./ci

  openfasoc-linux-py310:
    needs: ["magic-linux", "netgen-linux", "openroad-linux-py310", "yosys-linux-py310", "tcllib-linux", "open_pdks-sky130a-linux"]
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    env:
      PACKAGE: "misc/openfasoc"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.10"      
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }} libxrender1
      - uses: ./ci

  tcllib-linux:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:20.04
    env:
      PACKAGE: "misc/tcllib"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - run: apt -qqy update && apt -qqy install ${{ env.APT_REQUIREMENTS }} libxrender1
      - uses: ./ci
