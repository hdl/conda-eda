name: Build packages

on:
  workflow_call:
    secrets:
      ANACONDA_TOKEN:
        description: 'Anaconda Token'
      ANACONDA_USER:
        description: 'Anaconda User'

env:
  ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
  ANACONDA_USER: ${{ secrets.ANACONDA_USER }}

defaults:
  run:
    shell: bash

jobs:

  #1
  magic-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "misc/magic"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - name: 'Install csh'
        run: |
          sudo apt update
          sudo apt install -y csh
      - uses: ./ci

  #2
  icestorm-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "bit/icestorm"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #3
  prjtrellis-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "bit/prjtrellis"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #4
  prjoxide-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "bit/prjoxide"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #5
  prjxray-db-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "bit/prjxray-db"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #6
  prjxray-tools-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "bit/prjxray-tools"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #7
  icarus-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sim/icarus"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #8
  verilator-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sim/verilator"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #9
  yosys-linux-py37:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "syn/yosys"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.7"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #10
  yosys-linux-py38:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "syn/yosys"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.8"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #11
  yosys-plugins-symbiflow-linux:
    runs-on: "ubuntu-20.04"
    needs: ["icarus-linux", "yosys-linux-py37", "yosys-linux-py38", "surelog-linux-py37", "surelog-linux-py38"]
    env:
      PACKAGE: "syn/yosys-plugins-symbiflow"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #12
  nextpnr-nexus-linux:
    runs-on: "ubuntu-20.04"
    needs: ["prjoxide-linux"]
    env:
      PACKAGE: "pnr/nextpnr/nexus"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #13
  symbiflow-yosys-plugins-linux:
    runs-on: "ubuntu-20.04"
    needs: ["icarus-linux", "yosys-linux-py37", "yosys-linux-py38", "surelog-linux-py37", "surelog-linux-py38"]
    env:
      PACKAGE: "syn/symbiflow-yosys-plugins"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #14
  vtr-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/vtr"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #15
  vtr-gui-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/vtr-gui"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #16
  vtr-optimized-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/vtr-optimized"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #17
  quicklogic-vtr-linux:
    runs-on: "ubuntu-20.04"
    needs: "vtr-linux"
    env:
      PACKAGE: "pnr/quicklogic-vtr"
      OS_NAME: "linux"
    steps:
      # Skip if token isn't available (cross-repository PRs mainly)
      - run: if [ "$ANACONDA_TOKEN" = "" ]; then echo "SKIP=true" >>$GITHUB_ENV; fi
      - uses: actions/checkout@v3
      - uses: ./ci

  #18
  quicklogic-vtr-gui-linux:
    runs-on: "ubuntu-20.04"
    needs: "vtr-gui-linux"
    env:
      PACKAGE: "pnr/quicklogic-vtr-gui"
      OS_NAME: "linux"
    steps:
      # Skip if token isn't available (cross-repository PRs mainly)
      - run: if [ "$ANACONDA_TOKEN" = "" ]; then echo "SKIP=true" >>$GITHUB_ENV; fi
      - uses: actions/checkout@v3
      - uses: ./ci

  #19
  nextpnr-ice40-linux:
    runs-on: "ubuntu-20.04"
    needs: ["icestorm-linux"]
    env:
      PACKAGE: "pnr/nextpnr/ice40"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #20
  nextpnr-ecp5-linux:
    runs-on: "ubuntu-20.04"
    needs: ["prjtrellis-linux"]
    env:
      PACKAGE: "pnr/nextpnr/ecp5"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #21
  nextpnr-generic-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/nextpnr/generic"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #22
  nextpnr-xilinx-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/nextpnr/xilinx"
      OS_NAME: "linux"
      KEEP_ALIVE: "true"
      USE_PYPY: "1"
      SKIP: "true"  # See https://github.com/hdl/conda-eda/issues/191
    steps:
      - uses: actions/checkout@v3
      - name: 'Install pypy'
        run: |
          sudo add-apt-repository ppa:pypy/ppa -y
          sudo apt update
          sudo apt install -y pypy3
      - uses: ./ci

  #23
  nextpnr-fpga_interchange-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/nextpnr/fpga_interchange"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #24
  symbiyosys-linux-py37:
    runs-on: "ubuntu-20.04"
    needs: "yosys-linux-py37"
    env:
      PACKAGE: "formal/symbiyosys"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.7"
      SKIP: "true"  # See https://github.com/litex-hub/litex-conda-eda/issues/70
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #25
  symbiyosys-linux-py38:
    runs-on: "ubuntu-20.04"
    needs: "yosys-linux-py38"
    env:
      PACKAGE: "formal/symbiyosys"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.8"
      SKIP: "true"  # See https://github.com/litex-hub/litex-conda-eda/issues/70
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #26
  xilinx-vivado-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "xilinx/vivado"
      OS_NAME: "linux"
      VERSIONS: ${{ format('{0}{1}', github.workspace, '/xilinx/vivado/versions') }}
      SCRIPT: ${{ format('{0}{1}', github.workspace, '/xilinx/vivado/gen_metapackages.sh') }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #27
  icestorm-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "bit/icestorm"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #28
  prjtrellis-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "bit/prjtrellis"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #29
  icarus-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "sim/icarus"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #30
  verilator-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "sim/verilator"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #31
  yosys-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "syn/yosys"
      OS_NAME: "osx"
      EXTRA_BUILD_ARGS: "--no-test"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #32
  symbiflow-yosys-plugins-osx:
    runs-on: "macos-latest"
    needs: ["icarus-osx", "yosys-osx"]
    env:
      PACKAGE: "syn/symbiflow-yosys-plugins"
      OS_NAME: "osx"
      SKIP: "true"  # See https://github.com/litex-hub/litex-conda-eda/issues/71
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #33
  vtr-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "pnr/vtr"
      OS_NAME: "osx"
      SKIP: "true"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #34
  vtr-gui-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "pnr/vtr-gui"
      OS_NAME: "osx"
      SKIP: "true"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #35
  nextpnr-ice40-osx:
    runs-on: "macos-latest"
    needs: ["icestorm-osx"]
    env:
      PACKAGE: "pnr/nextpnr/ice40"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #36
  nextpnr-generic-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "pnr/nextpnr/generic"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #37
  icestorm-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "bit/icestorm"
      OS_NAME: "windows"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #38
  prjtrellis-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "bit/prjtrellis"
      OS_NAME: "windows"
      SKIP: "true"  # See: https://github.com/hdl/conda-eda/issues/201
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #39
  icarus-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "sim/icarus"
      OS_NAME: "windows"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #40
  yosys-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "syn/yosys"
      OS_NAME: "windows"
      SKIP: "true"  # See: https://github.com/hdl/conda-eda/issues/224
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #41
  nextpnr-ice40-windows:
    runs-on: "windows-latest"
    needs: ["icestorm-windows"]
    env:
      PACKAGE: "pnr/nextpnr/ice40"
      OS_NAME: "windows"
      SKIP: "true"  # See: https://github.com/hdl/conda-eda/issues/120
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #42
  nextpnr-generic-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "pnr/nextpnr/generic"
      OS_NAME: "windows"
      SKIP: "true"  # See: https://github.com/hdl/conda-eda/issues/120
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #43
  verible-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/verible"
      USE_SYSTEM_GCC_VERSION: "9"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #44
  tree-sitter-verilog-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "misc/tree-sitter-verilog"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #45
  odin-ii-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/odin_II"
      OS_NAME: "linux"
      SKIP: "true"  # See https://github.com/hdl/conda-eda/issues/209
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #46
  slang-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/slang"
      OS_NAME: "linux"
      USE_SYSTEM_GCC_VERSION: "9"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #47
  sv-parser-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/sv-parser"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #48
  moore-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/moore"
      OS_NAME: "linux"
      SKIP: "true"  # See https://github.com/hdl/conda-eda/issues/163
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #49
  surelog-linux-py37:
    needs: ["libunwind", "gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/surelog"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.7"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #50
  surelog-linux-py38:
    needs: ["libunwind", "gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/surelog"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.8"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #51
  surelog-uhdm-linux-py37:
    needs: ["libunwind", "gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/surelog-uhdm"
      USE_SYSTEM_GCC_VERSION: "9"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.7"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #52
  surelog-uhdm-linux-py38:
    needs: ["libunwind", "gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/surelog-uhdm"
      USE_SYSTEM_GCC_VERSION: "9"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.8"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #53
  yosys-uhdm-linux-py37:
    needs: ["libunwind", "gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "syn/yosys-uhdm"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.7"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #54
  yosys-uhdm-linux-py38:
    needs: ["libunwind", "gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "syn/yosys-uhdm"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.8"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #55
  libunwind:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "misc/libunwind"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #56
  gperftools:
    needs: "libunwind"
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "misc/gperftools"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #57
  verilator-uhdm-linux-py37:
    needs: ["gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sim/verilator-uhdm"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.7"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #58
  verilator-uhdm-linux-py38:
    needs: ["gperftools"]
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sim/verilator-uhdm"
      OS_NAME: "linux"
      PYTHON_VERSION: "3.8"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #59
  netgen-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "misc/netgen"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #60
  zachjs-sv2v-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "sv-front/zachjs-sv2v"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #61
  open_pdks-linux:
    runs-on: "ubuntu-20.04"
    needs: ["magic-linux"]
    env:
      PACKAGE: "misc/open_pdks"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #62
  openroad-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "pnr/openroad"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #63
  xls-linux:
    # uses older ubuntu for better compat:
    # https://github.com/hdl/conda-eda/issues/199
    runs-on: "ubuntu-18.04"
    env:
      PACKAGE: "hls/xls"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - uses: ./ci

  #64
  openlane-linux:
    runs-on: "ubuntu-20.04"
    env:
      PACKAGE: "misc/openlane"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v3
      - name: 'Install tcllib'
        run: |
          sudo apt update
          sudo apt install -y tcllib
      - uses: ./ci
